Index: mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_p2p.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/cfg80211/cfg80211_p2p.c
+++ mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_p2p.c
@@ -51,6 +51,11 @@ VOID CFG80211RemainOnChannelTimeout(
 {
 	RTMP_ADAPTER *pAd = (RTMP_ADAPTER *) FunctionContext;
 	PCFG80211_CTRL pCfg80211_ctrl = &pAd->cfg80211_ctrl;
+	CMD_RTPRIV_IOCTL_80211_CHAN *pChanInfo;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
+        PWIRELESS_DEV pwdev;
+        pwdev = pChanInfo->pWdev;
+#endif /* LINUX_VERSION_CODE: 3.6.0 */
 
 	DBGPRINT(RT_DEBUG_INFO, ("CFG80211_ROC: RemainOnChannelTimeout\n"));
 	
@@ -88,9 +93,8 @@ VOID CFG80211RemainOnChannelTimeout(
 	{
 		DBGPRINT(RT_DEBUG_TRACE, ("CFG80211_ROC: RemainOnChannelTimeout -- FINISH\n"));
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0))
-		cfg80211_remain_on_channel_expired( CFG80211_GetEventDevice(pAd),	
-        		pCfg80211_ctrl->Cfg80211ChanInfo.cookie, pCfg80211_ctrl->Cfg80211ChanInfo.chan
-        		,GFP_KERNEL);
+		cfg80211_remain_on_channel_expired( pwdev,	pCfg80211_ctrl->Cfg80211ChanInfo.cookie,
+                               pCfg80211_ctrl->Cfg80211ChanInfo.chan ,GFP_KERNEL);
 #else
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,34))
 		cfg80211_remain_on_channel_expired( CFG80211_GetEventDevice(pAd),	
@@ -112,14 +116,13 @@ BOOLEAN CFG80211DRV_OpsRemainOnChannel(V
 	BOOLEAN Cancelled;
 	PCFG80211_CTRL pCfg80211_ctrl = &pAd->cfg80211_ctrl;
 	UCHAR lock_channel;
-
-	pChanInfo = (CMD_RTPRIV_IOCTL_80211_CHAN *) pData;
-
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
-        PWIRELESS_DEV pwdev = NULL;
+        PWIRELESS_DEV pwdev;
         pwdev = pChanInfo->pWdev;
 #endif /* LINUX_VERSION_CODE: 3.6.0 */
-	
+
+	pChanInfo = (CMD_RTPRIV_IOCTL_80211_CHAN *) pData;
+
 	CFG80211DBG(RT_DEBUG_INFO, ("%s\n", __FUNCTION__));
 	
 #ifdef RT_CFG80211_P2P_CONCURRENT_DEVICE
@@ -205,6 +208,7 @@ BOOLEAN CFG80211DRV_OpsCancelRemainOnCha
 		RTMPCancelTimer(&pAd->cfg80211_ctrl.Cfg80211RocTimer, &Cancelled);
 		pAd->cfg80211_ctrl.Cfg80211RocTimerRunning = FALSE;
 	}
+    return 0;
 }
 
 INT CFG80211_setPowerMgmt(VOID *pAdCB, UINT Enable)
Index: mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_ap.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/cfg80211/cfg80211_ap.c
+++ mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_ap.c
@@ -164,7 +164,7 @@ static INT CFG80211DRV_UpdateApSettingFr
 		DBGPRINT(RT_DEBUG_TRACE, ("CFG_TIM New DP %d\n", pBeacon->dtim_period));
 		pAd->ApCfg.DtimPeriod = pBeacon->dtim_period;	
 	}
-		
+	return 0;	
 }
 
 VOID CFG80211DRV_DisableApInterface(PRTMP_ADAPTER pAd)
@@ -286,7 +286,7 @@ VOID CFG80211_UpdateBeacon(
 	BeaconTransmit.field.MCS = MCS_RATE_6;
 
 	//YF 
-	RTMPWriteTxWI(pAd, (UCHAR *)pTxWI, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 0, BSS0Mcast_WCID,
+	RTMPWriteTxWI(pAd, pTxWI, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 0, BSS0Mcast_WCID,
                 	beacon_len, PID_MGMT, 0, 0, IFS_HTTXOP, &BeaconTransmit);
 
 	updateAllBeacon(pAd, MAIN_MBSSID, beacon_len);
@@ -302,6 +302,7 @@ BOOLEAN CFG80211DRV_OpsBeaconSet(VOID *p
 	CFG80211_UpdateBeacon(pAd, pBeacon->beacon_head, pBeacon->beacon_head_len,
 			  				   pBeacon->beacon_tail, pBeacon->beacon_tail_len,
 							   TRUE);
+   return 0;
 }
 	
 BOOLEAN CFG80211DRV_OpsBeaconAdd(VOID *pAdOrg, VOID *pData)
@@ -769,6 +770,7 @@ INT CFG80211_ApStaDel(
 		else
 			DBGPRINT(RT_DEBUG_ERROR, ("Can't find pEntry in ApStaDel\n"));
 	}
+    return 0;
 }
 
 INT CFG80211_setApDefaultKey(
@@ -798,7 +800,8 @@ INT CFG80211_ApStaDelSendEvent(PRTMP_ADA
 	{
 		DBGPRINT(RT_DEBUG_TRACE, ("SINGLE_DEVICE CFG : GO NOITFY THE CLIENT Disconnected\n"));
 		CFG80211OS_DelSta(pAd->net_dev, mac_addr);
-	}	
+	}
+    return 0;	
 }
 
 #endif /* CONFIG_AP_SUPPORT */
