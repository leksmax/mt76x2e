Index: mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/cfg80211/cfg80211.c
+++ mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211.c
@@ -805,13 +805,21 @@ Return Value:
 Note:
 ========================================================================
 */
-static int CFG80211_OpsStaGet(
-	IN struct wiphy						*pWiphy,
-	IN struct net_device				*pNdev,
-	IN UINT8							*pMac,
-	IN struct station_info				*pSinfo)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,16,0))
+static int CFG80211_OpsStaGet(struct wiphy *pWiphy, struct net_device *pNdev,
+	const u8 *pMac, struct station_info *pSinfo)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0))
+static int CFG80211_OpsStaGet(struct wiphy *pWiphy, struct net_device *pNdev,
+	u8 *pMac, struct station_info *pSinfo)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0))
+static int CFG80211_OpsStaGet(struct wiphy *pWiphy, struct net_device *pNdev,
+	const u8 *pMac, struct station_info *pSinfo)
+#else
+static int CFG80211_OpsStaGet(struct wiphy *pWiphy, struct net_device *pNdev,
+	const UINT8 *pMac, struct station_info *pSinfo)
+#endif
 {
-	VOID *pAd;
+	void *pAd;
 	CMD_RTPRIV_IOCTL_80211_STA StaInfo;
 
 	CFG80211DBG(RT_DEBUG_TRACE, ("80211> %s ==>\n", __FUNCTION__));
@@ -820,36 +828,33 @@ static int CFG80211_OpsStaGet(
 	/* init */
 	memset(pSinfo, 0, sizeof(*pSinfo));
 	memset(&StaInfo, 0, sizeof(StaInfo));
-
 	memcpy(StaInfo.MAC, pMac, 6);
 
 	/* get sta information */
 	if (RTMP_DRIVER_80211_STA_GET(pAd, &StaInfo) != NDIS_STATUS_SUCCESS)
 		return -ENOENT;
 
-	if (StaInfo.TxRateFlags != RT_CMD_80211_TXRATE_LEGACY)
-	{
+	if (StaInfo.TxRateFlags != RT_CMD_80211_TXRATE_LEGACY) {
 		pSinfo->txrate.flags = RATE_INFO_FLAGS_MCS;
 		if (StaInfo.TxRateFlags & RT_CMD_80211_TXRATE_BW_40)
-#if (LINUX_VERSION_CODE) >= KERNEL_VERSION(4,0,0)
-            pSinfo->txrate.bw = RATE_INFO_BW_40;
-#else
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0))
 			pSinfo->txrate.flags |= RATE_INFO_FLAGS_40_MHZ_WIDTH;
+#else
+			pSinfo->txrate.bw = RATE_INFO_BW_40;
 #endif
+
 		if (StaInfo.TxRateFlags & RT_CMD_80211_TXRATE_SHORT_GI)
 			pSinfo->txrate.flags |= RATE_INFO_FLAGS_SHORT_GI;
 
 		pSinfo->txrate.mcs = StaInfo.TxRateMCS;
-	}
-	else
-	{
+	} else {
 		pSinfo->txrate.legacy = StaInfo.TxRateMCS;
-	} 
+	}
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0))
 	pSinfo->filled |= STATION_INFO_TX_BITRATE;
 #else
-    pSinfo->filled |= BIT(NL80211_STA_INFO_TX_BITRATE);
+	pSinfo->filled |= BIT(NL80211_STA_INFO_TX_BITRATE);
 #endif
 
 	/* fill signal */
@@ -2228,103 +2233,144 @@ static int CFG80211_OpsChangeBss(
 	return 0;
 }
 
-static int CFG80211_OpsStaDel (
-        IN struct wiphy                    *pWiphy,
-        IN struct net_device               *dev,
-        IN struct station_del_parameters   *params)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0))
+static int CFG80211_OpsStaDel(struct wiphy *pWiphy, struct net_device *dev,
+	struct station_del_parameters *params)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,16,0))
+static int CFG80211_OpsStaDel(struct wiphy *pWiphy, struct net_device *dev,
+	const u8 *pMacAddr)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0))
+static int CFG80211_OpsStaDel(struct wiphy *pWiphy, struct net_device *dev,
+	u8 *pMacAddr)
+#else
+static int CFG80211_OpsStaDel(struct wiphy *pWiphy, struct net_device *dev,
+	const UINT8 *pMacAddr)
+#endif
 {
-    const u8 *pMacAddr = params->mac;
-    VOID *pAd;
-    MAC80211_PAD_GET(pAd, pWiphy);
+	void *pAd;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0))
+	const u8 *pMacAddr = params->mac;
+#endif
+	MAC80211_PAD_GET(pAd, pWiphy);
 
-    CFG80211DBG(RT_DEBUG_TRACE, ("80211> %s ==>\n", __FUNCTION__));
-    if (pMacAddr ==  NULL)
-    {
-        RTMP_DRIVER_80211_AP_STA_DEL(pAd, NULL);
-    }
-    else
-    {
-        CFG80211DBG(RT_DEBUG_TRACE, ("80211> Delete STA(%02X:%02X:%02X:%02X:%02X:%02X) ==>\n", PRINT_MAC(pMacAddr)));
-        RTMP_DRIVER_80211_AP_STA_DEL(pAd, pMacAddr);
-    }
+	CFG80211DBG(RT_DEBUG_TRACE, ("80211> %s ==>\n", __FUNCTION__));
+	if (pMacAddr == NULL) {
+		RTMP_DRIVER_80211_AP_STA_DEL(pAd, NULL);
+	} else {
+		CFG80211DBG(RT_DEBUG_TRACE,
+				("80211> Delete STA(%02X:%02X:%02X:%02X:%02X:%02X) ==>\n",
+				PRINT_MAC(pMacAddr)));
+		RTMP_DRIVER_80211_AP_STA_DEL(pAd, (void*)pMacAddr);
+	}
 
-    return 0;
+	return 0;
 }
 
-static int CFG80211_OpsStaAdd(
-       IN struct wiphy                *wiphy,
-       IN struct net_device           *dev,
-       IN const UINT8                 *mac,
-       IN struct station_parameters   *params)
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,16,0))
+static int CFG80211_OpsStaAdd(struct wiphy *wiphy, struct net_device *dev,
+	const u8 *mac, struct station_parameters *params)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0))
+static int CFG80211_OpsStaAdd(struct wiphy *wiphy, struct net_device *dev,
+	u8 *mac, struct station_parameters *params)
+#else
+static int CFG80211_OpsStaAdd(struct wiphy *wiphy, struct net_device *dev,
+	const UINT8 *mac, struct station_parameters *params)
+#endif
 {
-    CFG80211DBG(RT_DEBUG_TRACE, ("80211> %s ==>\n", __FUNCTION__));
-    return 0;
+	CFG80211DBG(RT_DEBUG_TRACE, ("80211> %s ==>\n", __FUNCTION__));
+	return 0;
 }
 
-static int CFG80211_OpsStaChg(
-       IN struct wiphy                  *pWiphy,
-       IN struct net_device             *dev,
-       IN const u8                      *pMacAddr,
-       IN struct station_parameters     *params)
+#if(LINUX_VERSION_CODE >= KERNEL_VERSION(3,16,0))
+static int CFG80211_OpsStaChg(struct wiphy *pWiphy, struct net_device *dev,
+	const u8 *pMacAddr, struct station_parameters *params)
+#elif(LINUX_VERSION_CODE >= KERNEL_VERSION(3,8,0))
+static int CFG80211_OpsStaChg(struct wiphy *pWiphy, struct net_device *dev,
+	u8 *pMacAddr, struct station_parameters *params)
+#else
+static int CFG80211_OpsStaChg(struct wiphy *pWiphy, struct net_device *dev,
+	const UINT8 *pMacAddr, struct station_parameters *params)
+#endif
 {
-    void *pAd;
-    CFG80211_CB *p80211CB;
-
-    CFG80211DBG(RT_DEBUG_TRACE, ("80211> Change STA(%02X:%02X:%02X:%02X:%02X:%02X) ==>\n", PRINT_MAC(pMacAddr)));
-    MAC80211_PAD_GET(pAd, pWiphy);
+	void *pAd;
+	CFG80211_CB *p80211CB;
 
-    p80211CB = NULL;
-    RTMP_DRIVER_80211_CB_GET(pAd, &p80211CB);
+	CFG80211DBG(RT_DEBUG_TRACE,
+			("80211> Change STA(%02X:%02X:%02X:%02X:%02X:%02X) ==>\n",
+			PRINT_MAC(pMacAddr)));
+	MAC80211_PAD_GET(pAd, pWiphy);
 
-    if ((dev->ieee80211_ptr->iftype != RT_CMD_80211_IFTYPE_AP) &&
-       (dev->ieee80211_ptr->iftype != RT_CMD_80211_IFTYPE_P2P_GO))
-        return -EOPNOTSUPP;
+	p80211CB = NULL;
+	RTMP_DRIVER_80211_CB_GET(pAd, &p80211CB);
 
-    if(!(params->sta_flags_mask & BIT(NL80211_STA_FLAG_AUTHORIZED)))
-    {
-        CFG80211DBG(RT_DEBUG_ERROR, ("80211> %x ==>\n", params->sta_flags_mask));
-        return -EOPNOTSUPP;
-    }
+	if ((dev->ieee80211_ptr->iftype != RT_CMD_80211_IFTYPE_AP) &&
+	   (dev->ieee80211_ptr->iftype != RT_CMD_80211_IFTYPE_P2P_GO))
+		return -EOPNOTSUPP;
+
+	if (!(params->sta_flags_mask & BIT(NL80211_STA_FLAG_AUTHORIZED))) {
+		CFG80211DBG(RT_DEBUG_ERROR, ("80211> %x ==>\n", params->sta_flags_mask));
+		return -EOPNOTSUPP;
+	}
 
-    if (params->sta_flags_set & BIT(NL80211_STA_FLAG_AUTHORIZED))
-    {
-        CFG80211DBG(RT_DEBUG_TRACE, ("80211> STA(%02X:%02X:%02X:%02X:%02X:%02X) ==> PortSecured\n", PRINT_MAC(pMacAddr)));
-        RTMP_DRIVER_80211_AP_MLME_PORT_SECURED(pAd, pMacAddr, 1);
-    }
-    else
-    {
-        CFG80211DBG(RT_DEBUG_TRACE, ("80211> STA(%02X:%02X:%02X:%02X:%02X:%02X) ==> PortNotSecured\n", PRINT_MAC(pMacAddr)));
-        RTMP_DRIVER_80211_AP_MLME_PORT_SECURED(pAd, pMacAddr, 0);
-    }
-    return 0;
+	if (params->sta_flags_set & BIT(NL80211_STA_FLAG_AUTHORIZED)) {
+		CFG80211DBG(RT_DEBUG_TRACE,
+				("80211> STA(%02X:%02X:%02X:%02X:%02X:%02X) ==> PortSecured\n",
+				PRINT_MAC(pMacAddr)));
+		RTMP_DRIVER_80211_AP_MLME_PORT_SECURED(pAd, (void*)pMacAddr, 1);
+	} else {
+		CFG80211DBG(RT_DEBUG_TRACE,
+				("80211> STA(%02X:%02X:%02X:%02X:%02X:%02X) ==> PortNotSecured\n",
+				PRINT_MAC(pMacAddr)));
+		RTMP_DRIVER_80211_AP_MLME_PORT_SECURED(pAd, (void*)pMacAddr, 0);
+	}
+	return 0;
 }
 
-static struct wireless_dev* CFG80211_OpsVirtualInfAdd(
-       IN struct wiphy             *pWiphy,
-       IN const char               *name,
-       IN unsigned char            name_assign_type,
-       IN enum nl80211_iftype      Type,
-       IN u32                      *pFlags,
-       struct vif_params           *pParams)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,1,0))
+static struct wireless_dev* CFG80211_OpsVirtualInfAdd(struct wiphy *pWiphy,
+	const char *name, unsigned char name_assign_type, enum nl80211_iftype Type,
+	u32 *pFlags, struct vif_params *pParams)
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
+struct wireless_dev * CFG80211_OpsVirtualInfAdd(struct wiphy *pWiphy,
+	const char *name, enum nl80211_iftype Type, u32 *pFlags,
+	struct vif_params *pParams)
+#else
+static struct net_device* CFG80211_OpsVirtualInfAdd(struct wiphy *pWiphy,
+	char *name, enum nl80211_iftype Type, u32 *pFlags, struct vif_params *pParams)
+#endif /* LINUX_VERSION_CODE: 4.1.0 */
 {
-    VOID *pAd;
-    CMD_RTPRIV_IOCTL_80211_VIF_SET vifInfo;
-    PWIRELESS_DEV pDev = NULL;
-    MAC80211_PAD_GET(pAd, pWiphy);
+	void *pAd;
+	CMD_RTPRIV_IOCTL_80211_VIF_SET vifInfo;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
+	PWIRELESS_DEV pDev = NULL;
+#else
+	PNET_DEV pDev = NULL;
+#endif /* LINUX_VERSION_CODE: 3.6.0 */
+	MAC80211_PAD_GET(pAd, pWiphy);
+	if (pAd == NULL) {
+		return NULL;
+	}
 
-    CFG80211DBG(RT_DEBUG_OFF, ("80211> %s [%s,%d, %d] ==>\n", __FUNCTION__, name, Type, strlen(name)));
+	CFG80211DBG(RT_DEBUG_OFF, ("80211> %s [%s,%d, %zu] ==>\n",
+			__FUNCTION__, name, Type, strlen(name)));
 
-    vifInfo.vifType = Type;
-    vifInfo.vifNameLen = strlen(name);
-    memset(vifInfo.vifName, 0, sizeof(vifInfo.vifName));
-    NdisCopyMemory(vifInfo.vifName, name, vifInfo.vifNameLen);
+	vifInfo.vifType = Type;
+	vifInfo.vifNameLen = strlen(name);
+	memset(vifInfo.vifName, 0, sizeof(vifInfo.vifName));
+	NdisCopyMemory(vifInfo.vifName, name, vifInfo.vifNameLen);
 
-    if (RTMP_DRIVER_80211_VIF_ADD(pAd, &vifInfo) != NDIS_STATUS_SUCCESS)
-        return NULL;
+	if (RTMP_DRIVER_80211_VIF_ADD(pAd, &vifInfo) != NDIS_STATUS_SUCCESS)
+		return NULL;
 
-    pDev = RTMP_CFG80211_FindVifEntryWdev_ByType(pAd, Type);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
+	pDev = RTMP_CFG80211_FindVifEntryWdev_ByType(pAd, Type);
+#else
+	/* Return NetDevice */
+	pDev = RTMP_CFG80211_FindVifEntry_ByType(pAd, Type);
+#endif /* LINUX_VERSION_CODE: 3.6.0 */
 
-    return pDev;
+	return pDev;
 }
 
 static int CFG80211_OpsVirtualInfDel(
