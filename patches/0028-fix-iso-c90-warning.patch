Index: mt76x2e-p4rev-113843/src/chips/mt76x2.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/chips/mt76x2.c
+++ mt76x2e-p4rev-113843/src/chips/mt76x2.c
@@ -914,7 +914,7 @@ static void mt76x2_switch_channel(RTMP_A
 	UCHAR bbp_ch_idx;
 	BOOLEAN band_change = FALSE;
 	UINT32 RegValue = 0;
-
+    UINT32 eLNA_gain_from_e2p;
 
 #ifdef DOT11_VHT_AC
 	if (ad->CommonCfg.BBPCurrentBW == BW_80) {
@@ -1089,7 +1089,7 @@ static void mt76x2_switch_channel(RTMP_A
 			
 	andes_switch_channel(ad, channel, scan, bw, tx_rx_setting, bbp_ch_idx);
 
-	UINT32 eLNA_gain_from_e2p = 0;
+	eLNA_gain_from_e2p = 0;
 	eLNA_gain_from_e2p = ((ad->ALNAGain2 & 0xFF) << 24) | ((ad->ALNAGain1 & 0xFF) << 16) | ((ad->ALNAGain0 & 0xFF) << 8) | (ad->BLNAGain & 0xFF);
 	andes_init_gain(ad, channel, TRUE, eLNA_gain_from_e2p);
 
@@ -1622,7 +1622,7 @@ static void mt76x2_init_mac_cr(RTMP_ADAP
 	u32 i;
 	u32 value = 0;
 	u16 e2p_value;
-
+	char xtal_freq_offset;
 	/*
 		Enable PBF and MAC clock
 		SYS_CTRL[11:10] = 0x3
@@ -1684,7 +1684,7 @@ static void mt76x2_init_mac_cr(RTMP_ADAP
  	 */ 
 	RT28xx_EEPROM_READ16(ad, G_BAND_BANDEDGE_PWR_BACK_OFF, e2p_value);
 
-	char xtal_freq_offset = 0;
+	xtal_freq_offset = 0;
 	if (((e2p_value & 0xff) == 0x00) || ((e2p_value & 0xff) == 0xff))
 		xtal_freq_offset = 0;
 	else if ((e2p_value & 0x80) == 0x80)
@@ -4849,6 +4849,7 @@ static const RTMP_CHIP_OP MT76x2_ChipOp
 
 VOID mt76x2_init(RTMP_ADAPTER *pAd)
 {
+	UINT32 mac_val;
 	RTMP_CHIP_CAP *pChipCap = &pAd->chipCap;
 
 	memcpy(&pAd->chipCap, &MT76x2_ChipCap, sizeof(RTMP_CHIP_CAP));
@@ -4865,7 +4866,7 @@ VOID mt76x2_init(RTMP_ADAPTER *pAd)
 		pChipCap->phy_caps = (fPHY_CAP_24G | fPHY_CAP_5G | fPHY_CAP_HT | fPHY_CAP_LDPC);
 
 #ifdef DOT11_VHT_AC
-	UINT32 mac_val = 0;
+	mac_val = 0;
 	RTMP_IO_READ32(pAd, 0x38, &mac_val);	
 
 	if ((mac_val & 0x80000) == 0x80000)
Index: mt76x2e-p4rev-113843/src/common/cmm_data_pci.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/common/cmm_data_pci.c
+++ mt76x2e-p4rev-113843/src/common/cmm_data_pci.c
@@ -1849,6 +1849,7 @@ NDIS_STATUS MlmeHardTransmitTxRing(RTMP_
 	MAC_TABLE_ENTRY *pMacEntry = NULL;
 	UINT8 TXWISize = pAd->chipCap.TXWISize;
 	HTTRANSMIT_SETTING *transmit;
+    UINT32 apidx;
 #ifdef CONFIG_AP_SUPPORT
 #ifdef SPECIFIC_TX_POWER_SUPPORT
 	UCHAR TxPwrAdj = 0;
@@ -1933,7 +1934,7 @@ NDIS_STATUS MlmeHardTransmitTxRing(RTMP_
 #ifdef CONFIG_AP_SUPPORT
 #ifdef SPECIFIC_TX_POWER_SUPPORT
 				/* Find which MBSSID to be send this probeRsp */
-				UINT32 apidx = get_apidx_by_addr(pAd, pHeader_802_11->Addr2);
+				apidx = get_apidx_by_addr(pAd, pHeader_802_11->Addr2);
 
 				if (!(apidx >= pAd->ApCfg.BssidNum) &&
 				     (pAd->ApCfg.MBSSID[apidx].TxPwrAdj != -1) /* &&
Index: mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_inf.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/cfg80211/cfg80211_inf.c
+++ mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211_inf.c
@@ -328,11 +328,12 @@ VOID RTMP_CFG80211_VirtualIF_CancelP2pCl
 
 static INT CFG80211_VirtualIF_Open(PNET_DEV dev_p)
 {
+    PRTMP_ADAPTER pAd;
 	VOID *pAdSrc;
 	
 	pAdSrc = RTMP_OS_NETDEV_GET_PRIV(dev_p);
 	ASSERT(pAdSrc);
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)pAdSrc;
+	pAd = (PRTMP_ADAPTER)pAdSrc;
 	
 	DBGPRINT(RT_DEBUG_TRACE, ("%s: ===> %d,%s\n", __FUNCTION__, dev_p->ifindex, 
 						RTMP_OS_NETDEV_GET_DEVNAME(dev_p)));
@@ -371,11 +372,12 @@ static INT CFG80211_VirtualIF_Open(PNET_
 
 static INT CFG80211_VirtualIF_Close(PNET_DEV dev_p)
 {
-	VOID *pAdSrc;
+	PRTMP_ADAPTER pAd;
+    VOID *pAdSrc;
 
 	pAdSrc = RTMP_OS_NETDEV_GET_PRIV(dev_p);
 	ASSERT(pAdSrc);
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)pAdSrc;
+	pAd = (PRTMP_ADAPTER)pAdSrc;
 
 #ifdef RT_CFG80211_P2P_SUPPORT
 	if (dev_p->ieee80211_ptr->iftype == RT_CMD_80211_IFTYPE_P2P_CLIENT)

