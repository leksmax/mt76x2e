Index: mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/cfg80211/cfg80211.c
+++ mt76x2e-p4rev-113843/src/os/linux/cfg80211/cfg80211.c
@@ -2532,8 +2532,8 @@ struct cfg80211_ops CFG80211_Ops = {
 	
 	/* change type/configuration of virtual interface */
 	.change_virtual_intf		= CFG80211_OpsVirtualInfChg,
-	.add_virtual_intf           = CFG80211_OpsVirtualInfAdd,
-	.del_virtual_intf           = CFG80211_OpsVirtualInfDel,
+/*	.add_virtual_intf           = CFG80211_OpsVirtualInfAdd, */
+/*	.del_virtual_intf           = CFG80211_OpsVirtualInfDel, */
 
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0))
@@ -2614,30 +2614,30 @@ struct cfg80211_ops CFG80211_Ops = {
 		channel for the specified duration to complete an off-channel
 		operation (e.g., public action frame exchange).
 	*/
-	.remain_on_channel			= CFG80211_OpsRemainOnChannel,
+	.remain_on_channel			= NULL, /*  CFG80211_OpsRemainOnChannel, */
 	/* cancel an on-going remain-on-channel operation */
-	.cancel_remain_on_channel	=  CFG80211_OpsCancelRemainOnChannel,
+	.cancel_remain_on_channel	=  NULL, /* CFG80211_OpsCancelRemainOnChannel, */
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,37))
 	/* transmit an action frame */
 	.action						= NULL,
 #else 
-	.mgmt_tx                    = CFG80211_OpsMgmtTx,
+	.mgmt_tx                    = NULL, /* CFG80211_OpsMgmtTx, */
 #endif /* LINUX_VERSION_CODE */
 #endif /* LINUX_VERSION_CODE */
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38))
-	 .mgmt_tx_cancel_wait       = CFG80211_OpsTxCancelWait,
+/*	 .mgmt_tx_cancel_wait       = CFG80211_OpsTxCancelWait, */
 #endif /* LINUX_VERSION_CODE */
 
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,35))
 	/* configure connection quality monitor RSSI threshold */
-	.set_cqm_rssi_config		= NULL,
+/*	.set_cqm_rssi_config		= NULL, */
 #endif /* LINUX_VERSION_CODE */
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37))
 	/* notify driver that a management frame type was registered */
-	.mgmt_frame_register		= CFG80211_OpsMgmtFrameRegister,
+	.mgmt_frame_register		= NULL, /* CFG80211_OpsMgmtFrameRegister, */
 #endif /* LINUX_VERSION_CODE */
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38))
@@ -2646,10 +2646,11 @@ struct cfg80211_ops CFG80211_Ops = {
 	/* get current antenna configuration from device (tx_ant, rx_ant) */
 	.get_antenna				= NULL,
 #endif /* LINUX_VERSION_CODE */
+/*
 	.change_bss                             = CFG80211_OpsChangeBss,
 	.del_station                            = CFG80211_OpsStaDel,
 	.add_station                            = CFG80211_OpsStaAdd,
-	.change_station                         = CFG80211_OpsStaChg,
+	.change_station                         = CFG80211_OpsStaChg, */
 //	.set_bitrate_mask                       = CFG80211_OpsBitrateSet,
 #ifdef CONFIG_NL80211_TESTMODE
         .testmode_cmd                           = CFG80211_OpsTestModeCmd,
